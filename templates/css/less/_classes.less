// Classes for manual use in html-files

// Font sizes
.s {
  .for(8; 40); .-each(@i) {
    &@{i} {
      .font-size(@i) !important;
    }
    p&@{i} {
      .font-size(@i; @paragraph-line-height) !important;
    }
  }
}

// Font weights
.normal {
  font-weight: normal;
}
.bold {
  font-weight: bold;
}

// Links
a.hover,
.hover a {
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }
}
a.unhover,
.unhover a {
  text-decoration: underline;

  &:hover {
    text-decoration: none;
  }
}
a.none,
.none a {
  text-decoration: none !important;
}

// Text aligns
.text-left {
  text-align: left !important;
}
.text-right {
  text-align: right !important;
}
.text-center {
  text-align: center !important;
}
.text-justify {
  text-align: justify !important;
}

// Images
.image-responsive {
  .image-responsive;
}
.image-bordered {
  .set-value(border; @image-bordered-border; padding; @image-bordered-padding);
}
.image-circle {
  .border-radius(50%);
}

// Embeds
.embed-responsive {
  .embed-responsive;

  &.embed-responsive-16by9 { // modifier class for 16:9 aspect ratio
    padding-bottom: 56.25%;
  }
  &.embed-responsive-4by3 { // modifier class for 4:3 aspect ratio
    padding-bottom: 75%;
  }
}

// Simple grid systems
.row-2 {
  .equal-grid(100%; 2; 20);
}
.row-3 {
  .equal-grid(100%; 3; 20);
}

// Tables
.nowrap {
  white-space: nowrap;
}
.valign-top {
  vertical-align: top;
}

// Blocks
.relative {
  position: relative;
}
.fixed {
  position: fixed;
}
.block {
  display: block;
}
.inline-block {
  display: inline-block;
}
.hidden {
  display: none;
}
.center-block {
  .center-block;
}
.center-block-content {
  .center-block-content;
}
.justify-block-content {
  .justify-block-content;
}

// Floatings
.left {
  float: left;
}
.right {
  float: right;
}
.pull-left {
  .left;
  .set-value(margin; 0 15 10 0);

  table&,
  th&,
  td& {
    float: none;
    margin: 0;
    .text-left;
  }
}
.pull-right {
  .right;
  .set-value(margin; 0 0 10 15);

  table&,
  th&,
  td& {
    float: none;
    margin: 0;
    .text-right;
  }
}

// Margins
.m {
  .for(0; 9); .-each(@i) {
    &@{i} {
      .margin-bottom(@i) !important;
    }
  }
}
.m {
  .for(10; 50); .-each(@i) {
    @step: (@i / 5);
    & when (@step = floor(@step)) { // emulate (@i % 5)
      &@{i} {
        .margin-bottom(@i) !important;
      }
    }
  }
}

// Paddings
.p {
  .for(0; 9); .-each(@i) {
    &@{i} {
      .padding-bottom(@i) !important;
    }
  }
}
.p {
  .for(10; 50); .-each(@i) {
    @step: (@i / 5);
    & when (@step = floor(@step)) { // emulate (@i % 5)
      &@{i} {
        .padding-bottom(@i) !important;
      }
    }
  }
}

// Clearfixes
.clearfix,
.nofloat,
.text-container {
  .clearfix;
}
.text-container {
  .set-value(padding; @paragraph-padding);
  .font-size(@font-size-base; @paragraph-line-height);

  p:last-child {
    padding: 0;
    line-height: inherit;
  }
}
.clear {
  clear: both;
}
.float-none {
  overflow: hidden;
}