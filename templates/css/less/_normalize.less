// CSS reset by defaults
html {
  font-family: @font-family-base;
  font-size: @font-size-base;
  line-height: @line-height-base;
  color: @text-color;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;

  & when (@footer-to-bottom) {
    height: 100%;
  }
}
body {
  background: @body-background;
  .set-value_(min-width; @min-width-base);

  & when (@footer-to-bottom) {
    height: 100%;
  }
}
* {
  padding: 0;
  margin: 0;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
img,
svg,
video {
  vertical-align: middle;
}
audio,
canvas,
progress,
video {
  display: inline-block;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
img {
  border: 0;
  -ms-interpolation-mode: bicubic;
}
svg:not(:root) {
  overflow: hidden;
}

a {
  background: transparent;
  color: @link-color;
  text-decoration: @link-text-decoration;

  &:hover when not (@link-color-hover = @link-color) {
    color: @link-color-hover;
  }
  &:hover when not (@link-text-decoration-hover = @link-text-decoration) {
    text-decoration: @link-text-decoration-hover;
  }
  &:visited when not (@link-color-visited = @link-color) {
    color: @link-color-visited;
  }
  &:visited when not (@link-text-decoration-visited = @link-text-decoration) {
    text-decoration: @link-text-decoration-visited;
  }
}
a:active,
a:focus,
a:hover,
input:focus,
textarea:focus,
select:focus,
button:focus {
  outline: 0;
}

::-moz-selection {
  background: @selection-color;
  text-shadow: none;
}
::selection {
  background: @selection-color;
  text-shadow: none;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6,
{
  a {
    text-decoration: @link-text-decoration;

    &:hover when not (@link-text-decoration-hover = @link-text-decoration) {
      text-decoration: @link-text-decoration-hover;
    }
  }
}
h1,
.h1 {
  background: @h1-background;
  .set-value(padding; @h1-padding; margin; @h1-margin; font; @h1-font);
  text-transform: @h1-text-transform;

  &,
  & a {
    color: @h1-color-text;
  }
}
h2,
.h2 {
  background: @h2-background;
  .set-value(padding; @h2-padding; margin; @h2-margin; font; @h2-font);
  text-transform: @h2-text-transform;

  &,
  & a {
    color: @h2-color-text;
  }
}
h3,
.h3 {
  background: @h3-background;
  .set-value(padding; @h3-padding; margin; @h3-margin; font; @h3-font);
  text-transform: @h3-text-transform;

  &,
  & a {
    color: @h3-color-text;
  }
}
h4,
.h4 {
  background: @h4-background;
  .set-value(padding; @h4-padding; margin; @h4-margin; font; @h4-font);
  text-transform: @h4-text-transform;

  &,
  & a {
    color: @h4-color-text;
  }
}
h5,
.h5 {
  background: @h5-background;
  .set-value(padding; @h5-padding; margin; @h5-margin; font; @h5-font);
  text-transform: @h5-text-transform;

  &,
  & a {
    color: @h5-color-text;
  }
}
h6,
.h6 {
  background: @h6-background;
  .set-value(padding; @h6-padding; margin; @h6-margin; font; @h6-font);
  text-transform: @h6-text-transform;

  &,
  & a {
    color: @h6-color-text;
  }
}

code,
kbd,
pre,
samp {
  font-family: @font-family-monospace;
}
hr {
  box-sizing: content-box;
  height: 0;
}
legend {
  border: 0;
}
p {
  .set-value(padding; @paragraph-padding; line-height; @paragraph-line-height);
}
pre {
  overflow: auto;
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}
sub,
sup {
  position: relative;
  vertical-align: baseline;
  .font-size(75%; 0);
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}

ul,
ol {
  .set-value(margin; @primary-list-margin);

  li {
    list-style: @primary-list-element-list-style;
    .set-value(margin; @primary-list-element-margin);

    main & {
      .set-value(line-height; @primary-list-element-line-height);
    }
  }
}
nav ul {
  margin: 0;
}
nav li {
  list-style: none;
  margin: 0;
  line-height: inherit;
}
ul.default {
  .set-value(margin; 0 0 10 0);

  li {
    list-style: disc outside;
    .set-value(margin; 0 0 5 20);
  }
}
ol {
  .set-value_(margin-left; 25);

  li {
    list-style: decimal outside;
  }
}

button,
input,
select,
textarea {
  vertical-align: middle;
}
button,
input {
  line-height: normal;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
}
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
.input,
select,
textarea {
  .box-sizing(border-box);
  background: @input-background;
  border: @input-border;
  .border-radius(@input-border-radius);
  .box-shadow(@input-box-shadow);
  .set-value(height; @input-height; padding-left; @input-padding; padding-right; @input-padding);
  font-family: @input-font-family;
  .set-value(font-size; @input-font-size);
  font-weight: @input-font-weight;
  font-style: @input-font-style;
  color: @input-color-text;
  text-shadow: @input-text-shadow;
  .placeholder;
  .transition(~'border .3s, background .3s');

  &:focus {
    border-color: @input-border-color-focus !important;
    color: @input-color-focus !important;

    & when (iscolor(@input-background)) and (@input-background-focus = @input-background) {
      background-color: lighten(@input-background, 5%) !important;
    }
    & when not (@input-background-focus = @input-background) {
      background-color: @input-background-focus !important;
    }
  }
  &[disabled] {
    border-color: @input-border-color-disabled !important;
    color: @input-color-disabled !important;

    & when (iscolor(@input-background)) and (@input-background-disabled = @input-background) {
      background-color: lighten(@input-background, 50%) !important;
    }
    & when not (@input-background-disabled = @input-background) {
      background-color: @input-background-disabled !important;
    }
  }
}
textarea {
  overflow: auto;
  .set-value(height; auto; padding; @input-padding; line-height; @paragraph-line-height);
  .resizable(vertical);
}
select {
  padding-right: 0;

  optgroup {
    font-weight: bold;
  }
  option {
    .set-value(padding; 0 @input-padding);
  }
}
label {
  cursor: pointer;
}